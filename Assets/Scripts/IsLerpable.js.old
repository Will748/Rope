#pragma strict

var lerp = false;
var player : GameObject;
var stopDistance =1.5;
var lerpSpeed = 0.05;
private var froze = false;


function Awake(){

	if(!player)player = GameObject.FindWithTag("Player");
}

function Update () {
	
	
	if(lerp){
		if(!froze){
			froze = true;
			FreezePositions();	
		}	
		this.SendMessage("SetAllowMovement", false);
		var distance = Vector3.Distance(transform.position, player.transform.position);
		if(distance > stopDistance){
			transform.position = Vector3.Lerp(transform.position, player.transform.position,
			lerpSpeed);
			var force = GetComponent.<Rigidbody>().velocity.x;
			//Debug.Log(rigidbody.velocity);
		}
		else{
			//rigidbody.constraints = RigidbodyConstraints.FreezeAll;
			Destroy(GameObject.FindWithTag("Grapple"));
    		player.GetComponent.<Rigidbody>().constraints &= ~RigidbodyConstraints.FreezePositionX;
    		player.GetComponent.<Rigidbody>().constraints &= ~RigidbodyConstraints.FreezePositionY;
			//Debug.Log(rigidbody.velocity);
			//rigidbody.AddForce(Vector3.forward *force);
			lerp = false;
			froze = false;
		}
	}
}

function OnTriggerEnter (other : Collider) {
	//Debug.Log("Grapple");
    if(other.gameObject.tag == "Grapple") {
    	//Debug.Log("Grapplehit");
    	other.GetComponent.<Rigidbody>().constraints &= ~RigidbodyConstraints.FreezePositionX;
    	other.GetComponent.<Rigidbody>().isKinematic = true;	
   		//other.gameObject.transform.parent = transform;
   		//other.transform.position.x = transform.position.x;
   		//other.transform.position.y = transform.position.y;

    }
}

function FreezePositions(){
	GameObject.FindWithTag("Grapple").transform.position.x = transform.position.x;
	GameObject.FindWithTag("Grapple").transform.position.y = transform.position.y;
	GetComponent.<Rigidbody>().constraints = RigidbodyConstraints.FreezeAll;	
	GetComponent.<Rigidbody>().constraints &= ~RigidbodyConstraints.FreezePositionY;	
	player.	GetComponent.<Rigidbody>().constraints = RigidbodyConstraints.FreezeAll;	
}	

function LerpTrue(){
	lerp = true;
}